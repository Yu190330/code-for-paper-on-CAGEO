package format_conversion;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.regex.*;

import format_conversion.Node_ele2tri;

public class Node_ele2tri{

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//url1 is the path of .node format file generated by TetGen.
		//url2 is the path of .face format file generated by TetGen.
		String url1="";
		String url2="";
		String nodePath=url1;
		String facePath=url2;
		String writeFileName="model_triformat.tri";
		Node_ele2tri file = new Node_ele2tri();
		file.Tetgen2Flac3d(nodePath,facePath,writeFileName);
	}
	
	ArrayList<String> nodelist=new ArrayList<>();
	ArrayList<String> facelist=new ArrayList<>();
	
	public void Tetgen2Flac3d(String nodePath,String facePath, String writeFileName) {
		try {
			
			//start to read vertex
			File node =new File(nodePath);
			if(node.exists()&&node.isFile()) {
				String encoding="utf-8";
				InputStreamReader read =new InputStreamReader(new FileInputStream(node),encoding);
				BufferedReader bufferedReader =new BufferedReader(read);
				String lineText=null;
				//int float float float
				String patternnode="\\s*(\\d+)\\s*+(\\-?)(\\d+)(\\.?)(\\d+)\\s*+(\\-?)(\\d+)(\\.?)(\\d+)\\s*+(\\-?)(\\d+)(\\.?)(\\d*)";
				while((lineText=bufferedReader.readLine())!=null) {
					boolean isnode=Pattern.matches(patternnode,lineText);
					if(isnode) {
						nodelist.add(lineText);
					}
				}
			}else {
				System.out.print("node file is not exist");
			}
			//read facet
			File face =new File(facePath); 
			if(face.exists()&&face.isFile()) {
				String encoding="utf-8";
				InputStreamReader read =new InputStreamReader(new FileInputStream(face),encoding);
				BufferedReader bufferedReader =new BufferedReader(read);
				String lineText=null;
				//int int int int int
				String patternface="\\s*(\\d+)(\\s+)+(\\d+)(\\s+)+(\\d+)(\\s+)+(\\d+)(\\s+)+(\\-?)(\\d+)";
				while((lineText=bufferedReader.readLine())!=null) {
					boolean isface=Pattern.matches(patternface,lineText);
					if(isface) {
						facelist.add(lineText);
					}
				}
			}else {
				System.out.print("face file is not exist");
			}
			
			//start to write
			File file=new File(writeFileName);
			FileWriter fw=new FileWriter(writeFileName);
			fw.write("*Vertex");
			fw.write("\r\n");
			for(int i=0;i<nodelist.size();i++) {
				fw.write("V"+" "+nodelist.get(i));
				fw.write("\r\n");
			}
			fw.write("*Zones");
			fw.write("\r\n");
			for(int i=0;i<facelist.size();i++) {
				fw.write("F"+" "+facelist.get(i));
				fw.write("\r\n");
			}
				fw.close();
		}catch(Exception e) {
			System.out.println("error2");
			e.printStackTrace();
		}
	}
}
